name: crowemi-trades-lambda-get-data
on:
  push:
    branches:
      - main

  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Deploy Dependencies
        run: |
          pip install -r lambda/get_data/requirements.txt
          pip install -e .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: crowemi-trades-lambda-get-data
          IMAGE_TAG: latest
        run: |
          cd lambda/get_data/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy Lambda
        env:
          REGION: "us-west-2"
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: crowemi-trades-lambda-get-data
          IMAGE_TAG: latest
          POLYGON_KEY: ${{ secrets.POLYGON_KEY }}
        run: |
          python lambda/get_data/deploy.py
